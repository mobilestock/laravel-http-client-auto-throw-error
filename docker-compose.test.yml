services:
  shared74:
    build:
      context: ./shared
      dockerfile: Dockerfile.php74

  shared83:
    build:
      context: ./shared
      dockerfile: Dockerfile.php83

  adm-api:
    build:
      context: ./apps/adm-api
      args:
        COMPOSER_OPTS: ''
    entrypoint: sh
    command:
      - -c
      - 'vendor/bin/phpunit test/unit --testdox --colors'

  load-balancer:
    image: ghcr.io/lunarmodules/busted:v2.2.0
    platform: linux/amd64
    volumes:
      - './apps/load-balancer:/data'
    command: .

  lookpay-api:
    build:
      context: ./apps/lookpay-api
      dockerfile: Dockerfile
      args:
        COMPOSER_OPTS: ''
    entrypoint: sh
    command:
      - -c
      - 'vendor/bin/phpunit tests --testdox --colors'

  med-api:
    build:
      context: ./apps/med-api
      dockerfile: Dockerfile
      args:
        COMPOSER_OPTS: ''
    entrypoint: sh
    command:
      - -c
      - 'vendor/bin/phpunit tests --testdox --colors'

  wc-lookpay-credit-card:
    image: stephenneal/php-composer:7.4-v2
    volumes:
      - './apps/wc-lookpay-credit-card:/app'
    entrypoint: sh
    working_dir: /app
    user: root
    command:
      - -c
      - 'composer install && vendor/bin/phpunit tests --testdox --colors'

  # Serviço base para rodar os testes Storybook
  storybook-tests:
    build:
      context: ./shared
      dockerfile: Dockerfile.storybook # Dockerfile compartilhado que instala as dependências
    image: storybook-test-image # Nome da imagem compartilhada entre os serviços
    working_dir: /app
    environment:
      - CI=true
    tty: true
    stdin_open: true
    volumes:
      - ./apps/storybook-web:/app/apps/storybook-web # Reflete mudanças locais em storybook-web
      - ./apps/storybook-native:/app/apps/storybook-native # Reflete mudanças locais em storybook-native

  # Serviço para testar storybook-web utilizando a imagem compartilhada
  storybook-web-test:
    image: storybook-test-image
    working_dir: /app/apps/storybook-web
    command:
      - sh
      - -c
      - 'cd src/packages && yarn && cd ../.. && yarn jest'
    environment:
      - CI=true

  # Serviço para testar storybook-native utilizando a mesma imagem
  storybook-native-test:
    image: storybook-test-image
    working_dir: /app/apps/storybook-native
    command:
      - sh
      - -c
      - 'cd src/packages && yarn && cd ../.. && yarn jest --updateSnapshot'
    environment:
      - CI=true
